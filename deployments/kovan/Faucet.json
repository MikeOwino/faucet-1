{
  "address": "0x5546e0295c7bb85b2fC00883B6025BA0Db06e50A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_bokky",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_compound",
          "type": "address[]"
        },
        {
          "internalType": "contract IFauceteer",
          "name": "_fauceteer",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_sushi",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "drip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd8d37b6402b665fc92c50590fa2087e34d9bcdc070c60a59345ca2a52d1d71f2",
  "receipt": {
    "to": null,
    "from": "0xC3990E801Fd54933f6aaf2A4B0ae682CB55D0aD1",
    "contractAddress": "0x5546e0295c7bb85b2fC00883B6025BA0Db06e50A",
    "transactionIndex": 0,
    "gasUsed": "803780",
    "logsBloom": "0x
    "blockHash": "0x5aa4b608589251ee01ddfc167caf339e1e677990c70f00e478bbb4814d5753a6",
    "transactionHash": "0xd8d37b6402b665fc92c50590fa2087e34d9bcdc070c60a59345ca2a52d1d71f2",
    "logs": [],
    "blockNumber": 23654277,
    "cumulativeGasUsed": "803780",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0xaFF4481D10270F50f203E0763e2597776068CBc5",
      "0x022E292b44B5a146F2e8ee36Ff44D3dd863C915c",
      "0xc6fDe3FD2Cc2b173aEC24cc3f267cb3Cd78a26B7",
      "0x1f9061B953bBa0E36BF50F21876132DcF276fC6e"
    ],
    [
      "0x162c44e53097e7B5aaE939b297ffFD6Bf90D1EE3",
      "0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa",
      "0xD1308F63823221518Ec88EB209CBaa1ac182105f",
      "0x07de306FF27a2B630B1141956844eB1552B956B5",
      "0x61460874a7196d6a22D1eE4922473664b3E95270",
      "0x482dC9bB08111CB875109B075A40881E48aE02Cd",
      "0xd3A691C852CDB01E281545A27064741F0B7f6825",
      "0x50DD65531676F718B018De3dc48F92B53D756996",
      "0xb7a4F3E9097C08dA09517b5aB877F7a917224ede"
    ],
    "0x916518711a75a98Ac00e8E3386d036F7eA56A484",
    "0x0769fd68dFb93167989C6f7254cd0D766Fb2841F"
  ],
  "solcInputHash": "203098f37a834a078f20a11f593af917",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_bokky\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_compound\",\"type\":\"address[]\"},{\"internalType\":\"contract IFauceteer\",\"name\":\"_fauceteer\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_sushi\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"drip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.6.12;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /// @notice EIP 2612\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf0da35541d6ae9e3c12fdd7c8d5d9584c56f9ac50d062efb8ca353ebd6ffd47d\",\"license\":\"MIT\"},\"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.6.12;\\nimport \\\"../interfaces/IERC20.sol\\\";\\n\\n// solhint-disable avoid-low-level-calls\\n\\nlibrary BoringERC20 {\\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41; // symbol()\\n    bytes4 private constant SIG_NAME = 0x06fdde03; // name()\\n    bytes4 private constant SIG_DECIMALS = 0x313ce567; // decimals()\\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb; // transfer(address,uint256)\\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd; // transferFrom(address,address,uint256)\\n\\n    /// @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token symbol.\\n    function safeSymbol(IERC20 token) internal view returns (string memory) {\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_SYMBOL));\\n        return success && data.length > 0 ? abi.decode(data, (string)) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.name version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token name.\\n    function safeName(IERC20 token) internal view returns (string memory) {\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_NAME));\\n        return success && data.length > 0 ? abi.decode(data, (string)) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (uint8) Token decimals.\\n    function safeDecimals(IERC20 token) internal view returns (uint8) {\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(SIG_DECIMALS));\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\n    }\\n\\n    /// @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER, to, amount));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"BoringERC20: Transfer failed\\\");\\n    }\\n\\n    /// @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param from Transfer tokens from.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"BoringERC20: TransferFrom failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xe8103ee576cf6accbd40de08bf63d5a4c3d656d830689f8e7870c21255574b86\",\"license\":\"MIT\"},\"contracts/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n\\n\\nimport \\\"@boringcrypto/boring-solidity/contracts/libraries/BoringERC20.sol\\\";\\nimport \\\"./interfaces/Allocatable.sol\\\";\\nimport \\\"./interfaces/IBokky.sol\\\";\\nimport \\\"./interfaces/IFauceteer.sol\\\";\\nimport \\\"./interfaces/IPoly.sol\\\";\\n\\ncontract Faucet {\\n  using BoringERC20 for IERC20;\\n\\n  address[] bokky;\\n\\n  address[] compound;\\n\\n  IFauceteer fauceteer;\\n\\n  IERC20 sushi;\\n\\n  constructor(\\n    address[] memory _bokky,\\n    address[] memory _compound,\\n    IFauceteer _fauceteer,\\n    IERC20 _sushi\\n  ) public {\\n    bokky = _bokky;\\n    compound = _compound;\\n    fauceteer = _fauceteer;\\n    sushi = _sushi;\\n  }\\n\\n  function _dump(address token) private {\\n    uint256 balance = IERC20(token).balanceOf(address(this));\\n    IERC20(token).safeTransfer(msg.sender, balance);\\n  }\\n\\n  function drip() public {\\n    uint256 id;\\n\\n    assembly {\\n      id := chainid()\\n    }\\n\\n    sushi.safeTransfer(msg.sender, sushi.balanceOf(address(this)) / 10000); // 0.01%\\n\\n    for (uint256 i = 0; i < bokky.length; i++) {\\n      address b = bokky[i];\\n      IBokky(b).drip();\\n      _dump(b);\\n    }\\n\\n    if (id == 3) {\\n      IPoly(0x96A62428509002a7aE5F6AD29E4750d852A3f3D7).getTokens(5000 * 1e18);\\n      _dump(0x96A62428509002a7aE5F6AD29E4750d852A3f3D7);\\n    }\\n\\n    if (id == 3 || id == 42) {\\n      for (uint256 j = 0; j < compound.length; j++) {\\n        address c = compound[j];\\n        fauceteer.drip(c);\\n        _dump(c);\\n      }\\n    }\\n\\n    if (id == 4 || id == 5) {\\n      for (uint256 k = 0; k < compound.length; k++) {\\n        address c = compound[k];\\n        Allocatable(c).allocateTo(\\n          msg.sender,\\n          1000 * (10**uint256(IERC20(c).safeDecimals()))\\n        );\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x6be8641700a148cf7a443777191f01429c1a994fd1779e59e93659a41aada934\",\"license\":\"MIT\"},\"contracts/interfaces/Allocatable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface Allocatable {\\n    function allocateTo(address, uint256) external;\\n}\",\"keccak256\":\"0x6ae9a02e501ac21edeac840dcb9d9def30d55f7f691b18fe40e2d692864edba4\",\"license\":\"MIT\"},\"contracts/interfaces/IBokky.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IBokky {\\n    function drip() external;\\n}\",\"keccak256\":\"0x92e0718f938dc944beb7817d2b88fdb6588f09829f29ad6fffaa0e3e9842c8d4\",\"license\":\"MIT\"},\"contracts/interfaces/IFauceteer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IFauceteer {\\n    function drip(address token) external;\\n}\",\"keccak256\":\"0xf5dc6dc924eadaedc78b4b021714bae5f551594f40b7d8b1432436a270e959f1\",\"license\":\"MIT\"},\"contracts/interfaces/IPoly.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IPoly {\\n    function getTokens (uint256 _amount) external returns (bool);\\n}\",\"keccak256\":\"0xe5c7b04572dd1beef362eb291030773a0db27576553dd513052904813e552344\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109203803806109208339818101604052608081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b90830190602082018581111561006857600080fd5b825186602082028301116401000000008211171561008557600080fd5b82525081516020918201928201910280838360005b838110156100b257818101518382015260200161009a565b50505050905001604052602001805160405193929190846401000000008211156100db57600080fd5b9083019060208201858111156100f057600080fd5b825186602082028301116401000000008211171561010d57600080fd5b82525081516020918201928201910280838360005b8381101561013a578181015183820152602001610122565b5050505091909101604090815260208381015193909101518751939550935061016a9260009250908701906101b3565b50825161017e9060019060208601906101b3565b50600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055506102379050565b828054828255906000526020600020908101928215610208579160200282015b8281111561020857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906101d3565b50610214929150610218565b5090565b5b808211156102145780546001600160a01b0319168155600101610219565b6106da806102466000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639f678cca14610030575b600080fd5b61003861003a565b005b600354604080516370a0823160e01b8152306004820152905146926100d6923392612710926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561008e57600080fd5b505afa1580156100a2573d6000803e3d6000fd5b505050506040513d60208110156100b857600080fd5b5051816100c157fe5b6003546001600160a01b03169291900461039d565b60005b6000548110156101665760008082815481106100f157fe5b600091825260208220015460408051634fb3c66560e11b815290516001600160a01b0390921693508392639f678cca9260048084019382900301818387803b15801561013c57600080fd5b505af1158015610150573d6000803e3d6000fd5b5050505061015d81610507565b506001016100d9565b50806003141561021757604080516369e4e61360e11b815269010f0cf064dd59200000600482015290517396a62428509002a7ae5f6ad29e4750d852a3f3d79163d3c9cc269160248083019260209291908290030181600087803b1580156101cd57600080fd5b505af11580156101e1573d6000803e3d6000fd5b505050506040513d60208110156101f757600080fd5b5061021790507396a62428509002a7ae5f6ad29e4750d852a3f3d7610507565b8060031480610226575080602a145b156102cc5760005b6001548110156102ca5760006001828154811061024757fe5b6000918252602082200154600254604080516333d2e68360e11b81526001600160a01b0393841660048201819052915191955091909216926367a5cd069260248084019382900301818387803b1580156102a057600080fd5b505af11580156102b4573d6000803e3d6000fd5b505050506102c181610507565b5060010161022e565b505b80600414806102db5750806005145b1561039a5760005b600154811015610398576000600182815481106102fc57fe5b6000918252602090912001546001600160a01b03169050806308bca5663361032383610598565b60ff16600a0a6103e8026040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561037357600080fd5b505af1158015610387573d6000803e3d6000fd5b5050600190930192506102e3915050565b505b50565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b6020831061041a5780518252601f1990920191602091820191016103fb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b606091505b50915091508180156104af5750805115806104af57508080602001905160208110156104ac57600080fd5b50515b610500576040805162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604482015290519081900360640190fd5b5050505050565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561055657600080fd5b505afa15801561056a573d6000803e3d6000fd5b505050506040513d602081101561058057600080fd5b505190506103986001600160a01b038316338361039d565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b1781529151815160009384936060936001600160a01b03881693919290918291908083835b602083106106015780518252601f1990920191602091820191016105e2565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610661576040519150601f19603f3d011682016040523d82523d6000602084013e610666565b606091505b5091509150818015610679575080516020145b61068457601261069c565b80806020019051602081101561069957600080fd5b50515b94935050505056fea26469706673582212207683d3042bbccfdcdc264e2fae5391d9b2bfe6077d0cb7eaaf5ed67c1245727164736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80639f678cca14610030575b600080fd5b61003861003a565b005b600354604080516370a0823160e01b8152306004820152905146926100d6923392612710926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561008e57600080fd5b505afa1580156100a2573d6000803e3d6000fd5b505050506040513d60208110156100b857600080fd5b5051816100c157fe5b6003546001600160a01b03169291900461039d565b60005b6000548110156101665760008082815481106100f157fe5b600091825260208220015460408051634fb3c66560e11b815290516001600160a01b0390921693508392639f678cca9260048084019382900301818387803b15801561013c57600080fd5b505af1158015610150573d6000803e3d6000fd5b5050505061015d81610507565b506001016100d9565b50806003141561021757604080516369e4e61360e11b815269010f0cf064dd59200000600482015290517396a62428509002a7ae5f6ad29e4750d852a3f3d79163d3c9cc269160248083019260209291908290030181600087803b1580156101cd57600080fd5b505af11580156101e1573d6000803e3d6000fd5b505050506040513d60208110156101f757600080fd5b5061021790507396a62428509002a7ae5f6ad29e4750d852a3f3d7610507565b8060031480610226575080602a145b156102cc5760005b6001548110156102ca5760006001828154811061024757fe5b6000918252602082200154600254604080516333d2e68360e11b81526001600160a01b0393841660048201819052915191955091909216926367a5cd069260248084019382900301818387803b1580156102a057600080fd5b505af11580156102b4573d6000803e3d6000fd5b505050506102c181610507565b5060010161022e565b505b80600414806102db5750806005145b1561039a5760005b600154811015610398576000600182815481106102fc57fe5b6000918252602090912001546001600160a01b03169050806308bca5663361032383610598565b60ff16600a0a6103e8026040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561037357600080fd5b505af1158015610387573d6000803e3d6000fd5b5050600190930192506102e3915050565b505b50565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b178152925182516000946060949389169392918291908083835b6020831061041a5780518252601f1990920191602091820191016103fb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b606091505b50915091508180156104af5750805115806104af57508080602001905160208110156104ac57600080fd5b50515b610500576040805162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604482015290519081900360640190fd5b5050505050565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561055657600080fd5b505afa15801561056a573d6000803e3d6000fd5b505050506040513d602081101561058057600080fd5b505190506103986001600160a01b038316338361039d565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b1781529151815160009384936060936001600160a01b03881693919290918291908083835b602083106106015780518252601f1990920191602091820191016105e2565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610661576040519150601f19603f3d011682016040523d82523d6000602084013e610666565b606091505b5091509150818015610679575080516020145b61068457601261069c565b80806020019051602081101561069957600080fd5b50515b94935050505056fea26469706673582212207683d3042bbccfdcdc264e2fae5391d9b2bfe6077d0cb7eaaf5ed67c1245727164736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 315,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "bokky",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 318,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "compound",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 320,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "fauceteer",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IFauceteer)562"
      },
      {
        "astId": 322,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "sushi",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC20)66"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)66": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IFauceteer)562": {
        "encoding": "inplace",
        "label": "contract IFauceteer",
        "numberOfBytes": "20"
      }
    }
  }
}